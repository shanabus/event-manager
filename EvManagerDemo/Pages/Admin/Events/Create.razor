@page "/admin/events/create"
@using EvManagerDemo.Data;
@using EvManagerDemo.Services;
@inject ILogger<Create> Logger
@inject EventsService EventService
@inject NavigationManager NavigationManager

<PageTitle>Create Event</PageTitle>

<h3>Create Event</h3>

<EditForm Model="@Model" OnValidSubmit="@Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <InputText @bind-Value="Model!.Name" class="form-control" id="Name" />
        <div class="form-text">Enter the <i>Name</i> of the Event.</div>
    </div>
    <div class="mb-3">
        <label for="Location" class="form-label">Location</label>
        <InputText @bind-Value="Model!.Location" class="form-control" id="Location" />
        <div class="form-text">Enter the <i>Location</i> of the Event.</div>
    </div>

    <div class="row mt-3">
        <div class="col">
            <h4>Event Dates</h4>
        </div>
        <div class="col text-end">
            <button type="button" @onclick="AddDay" class="btn btn-sm btn-primary"><span class="oi oi-plus"></span> Add Day</button>
        </div>
    </div>    

    @foreach(var d in Model.EventDays)
    {
        <div class="mb-3">
            <div class="row">
                <div class="col">
                    <label for="" class="form-label">Day</label>
                    <InputDate @bind-Value="d!.Day" class="form-control" />
                </div>
                <div class="col">
                    <label for="" class="form-label">Room</label>
                    <InputText @bind-Value="d!.Room" class="form-control" />
                </div>
                <div class="col">
                    <label for="" class="form-label">Note</label>
                    <InputText @bind-Value="d!.Note" class="form-control" />
                </div>
                <div class="col-1 position-relative">
                    <button type="button" class="btn btn-danger position-absolute bottom-0 end-0" @onclick="() => Remove(d)"><span class="oi oi-trash"></span></button>
                </div>
            </div>            
        </div>
    }

    <hr />

    <div class="row mt-3">
        <div class="col">
            <a href="/allevents" class="btn btn-secondary">Cancel</a>
        </div>
        <div class="col text-end">
            <button disabled="@(!IsValid)" type="submit" class="btn btn-success">Submit</button>
        </div>
    </div>
    
</EditForm>



@code {
    public Event? Model { get; set; }

    public bool IsValid = false;

    protected override void OnInitialized() => Model ??= new();

    private void AddDay()
    {
        var today = DateTime.Now;

        if (Model!.EventDays.Count > 0)
        {
            var last = Model!.EventDays.Last().Day.AddDays(1);
            Model!.EventDays.Add(new EventDay { Day = last });
        }
        else
        {
            Model!.EventDays.Add(new EventDay { Day = today });    
        }
        
        IsValid = true;
    }

    private void Remove(EventDay day)
    {
        Model!.EventDays.Remove(day);


        IsValid = Model!.EventDays.Count > 0;
    }

    private async Task Submit()
    {
        var e = await EventService.CreateEventAsync(Model!);

        NavigationManager.NavigateTo($"/admin/events/details/{e.EventId}");
    }
}
